// =============================================================================
// _vendor.scss - Fixed version with all linting issues resolved
// =============================================================================

@use "sass:string";
@use "sass:list";
@use "sass:color";

// Vendor prefixes
$vendor-prefixes: (
  '-moz-',
  '-webkit-',
  '-ms-',
  ''
);

// Properties that should be vendorized
$vendor-properties: (
  'animation',
  'animation-delay',
  'animation-direction',
  'animation-duration',
  'animation-fill-mode',
  'animation-iteration-count',
  'animation-name',
  'animation-play-state',
  'animation-timing-function',
  'appearance',
  'backdrop-filter',
  'background-clip',
  'background-origin',
  'background-size',
  'box-sizing',
  'clip-path',
  'filter',
  'flex',
  'flex-basis',
  'flex-direction',
  'flex-flow',
  'flex-grow',
  'flex-shrink',
  'flex-wrap',
  'justify-content',
  'order',
  'perspective',
  'transform',
  'transform-origin',
  'transform-style',
  'transition',
  'transition-delay',
  'transition-duration',
  'transition-property',
  'transition-timing-function',
  'user-select'
);

// Values that should be vendorized
$vendor-values: (
  'filter',
  'flex',
  'linear-gradient',
  'radial-gradient',
  'transform'
);

// String replacement function
@function str-replace($string, $search, $replace: '') {
  $index: string.index($string, $search);

  @if $index {
    @return string.slice($string, 1, $index - 1) + $replace + str-replace(string.slice($string, $index + string.length($search)), $search, $replace);
  }

  @return $string;
}

// Replace all occurrences in a string
@function str-replace-all($string, $search, $replace: '') {
  @return str-replace($string, $search, $replace);
}

// Main vendor mixin
@mixin vendor($property, $value) {
  // Determine if property should expand
  $expand-property: list.index($vendor-properties, $property);

  // Determine if value should expand
  $expand-value: false;

  @each $x in $value {
    @each $y in $vendor-values {
      @if $y == string.slice($x, 1, string.length($y)) {
        $value: list.set-nth($value, list.index($value, $x), '-prefix-' + $x);
        $expand-value: true;
      }
    }
  }

  // Expand property?
  @if $expand-property {
    @each $vendor in $vendor-prefixes {
      #{$vendor}#{$property}: #{str-replace-all($value, '-prefix-', $vendor)};
    }
  }
  // Expand just the value?
  @else if $expand-value {
    @each $vendor in $vendor-prefixes {
      #{$property}: #{str-replace-all($value, '-prefix-', $vendor)};
    }
  }
  // Standard property
  @else {
    #{$property}: $value;
  }
}

// Keyframes mixin with proper spacing
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

// Additional utility mixins
@mixin transform($value) {
  @include vendor('transform', $value);
}

@mixin transition($value) {
  @include vendor('transition', $value);
}

@mixin appearance($value: none) {
  @include vendor('appearance', $value);
}

@mixin flex-display {
  @include vendor('display', 'flex');
}

@mixin flex-wrap($value: wrap) {
  @include vendor('flex-wrap', $value);
}

@mixin user-select($value: none) {
  @include vendor('user-select', $value);
}

// Box sizing reset
@mixin box-sizing($value: border-box) {
  @include vendor('box-sizing', $value);
}

// Animation mixin
@mixin animation($value) {
  @include vendor('animation', $value);
}

// Filter mixin
@mixin filter($value) {
  @include vendor('filter', $value);
}

// Background size mixin
@mixin background-size($value) {
  @include vendor('background-size', $value);
}

// Placeholder styles mixin
@mixin placeholder {
  &::placeholder {
    @content;
  }
}
